/*
 * This file is generated by jOOQ.
 */
package com.gaoxiaobu.generated;


import com.gaoxiaobu.generated.tables.Author_;
import com.gaoxiaobu.generated.tables.records.Author_Record;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>library</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Author_Record> KEY_AUTHOR__PRIMARY = UniqueKeys0.KEY_AUTHOR__PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<Author_Record> KEY_AUTHOR__PRIMARY = Internal.createUniqueKey(Author_.AUTHOR_, "KEY_author__PRIMARY", new TableField[] { Author_.AUTHOR_.ID }, true);
    }
}
