/*
 * This file is generated by jOOQ.
 */
package learn_jooq.gaoxiaobu.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import learn_jooq.gaoxiaobu.generated.tables.S4UnionKey;
import learn_jooq.gaoxiaobu.generated.tables.records.S4UnionKeyRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class S4UnionKeyDao extends DAOImpl<S4UnionKeyRecord, learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey, Record2<Integer, Integer>> {

    /**
     * Create a new S4UnionKeyDao without any configuration
     */
    public S4UnionKeyDao() {
        super(S4UnionKey.S4_UNION_KEY, learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey.class);
    }

    /**
     * Create a new S4UnionKeyDao with an attached configuration
     */
    @Autowired
    public S4UnionKeyDao(Configuration configuration) {
        super(S4UnionKey.S4_UNION_KEY, learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey object) {
        return compositeKeyRecord(object.getUk_1(), object.getUk_2());
    }

    /**
     * Fetch records that have <code>uk_1 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchRangeOfUk_1(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(S4UnionKey.S4_UNION_KEY.UK_1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uk_1 IN (values)</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchByUk_1(Integer... values) {
        return fetch(S4UnionKey.S4_UNION_KEY.UK_1, values);
    }

    /**
     * Fetch records that have <code>uk_2 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchRangeOfUk_2(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(S4UnionKey.S4_UNION_KEY.UK_2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uk_2 IN (values)</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchByUk_2(Integer... values) {
        return fetch(S4UnionKey.S4_UNION_KEY.UK_2, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(S4UnionKey.S4_UNION_KEY.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchByCreateTime(LocalDateTime... values) {
        return fetch(S4UnionKey.S4_UNION_KEY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(S4UnionKey.S4_UNION_KEY.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<learn_jooq.gaoxiaobu.generated.tables.pojos.S4UnionKey> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(S4UnionKey.S4_UNION_KEY.UPDATE_TIME, values);
    }
}
