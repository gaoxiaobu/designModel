/*
 * This file is generated by jOOQ.
 */
package learn_jooq.gaoxiaobu.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import learn_jooq.gaoxiaobu.generated.Keys;
import learn_jooq.gaoxiaobu.generated.LearnJooq;
import learn_jooq.gaoxiaobu.generated.tables.records.S4ColumenGt22Record;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 表字段超22
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S4ColumenGt22 extends TableImpl<S4ColumenGt22Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>learn-jooq.s4_columen_gt22</code>
     */
    public static final S4ColumenGt22 S4_COLUMEN_GT22 = new S4ColumenGt22();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<S4ColumenGt22Record> getRecordType() {
        return S4ColumenGt22Record.class;
    }

    /**
     * The column <code>learn-jooq.s4_columen_gt22.id</code>. id
     */
    public final TableField<S4ColumenGt22Record, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "id");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_1</code>. 列1
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_1 = createField(DSL.name("column_1"), SQLDataType.INTEGER, this, "列1");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_2</code>. 列2
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_2 = createField(DSL.name("column_2"), SQLDataType.INTEGER, this, "列2");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_3</code>. 列3
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_3 = createField(DSL.name("column_3"), SQLDataType.INTEGER, this, "列3");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_4</code>. 列4
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_4 = createField(DSL.name("column_4"), SQLDataType.INTEGER, this, "列4");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_5</code>. 列5
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_5 = createField(DSL.name("column_5"), SQLDataType.INTEGER, this, "列5");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_6</code>. 列6
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_6 = createField(DSL.name("column_6"), SQLDataType.INTEGER, this, "列6");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_7</code>. 列7
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_7 = createField(DSL.name("column_7"), SQLDataType.INTEGER, this, "列7");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_8</code>. 列8
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_8 = createField(DSL.name("column_8"), SQLDataType.INTEGER, this, "列8");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_9</code>. 列_9
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_9 = createField(DSL.name("column_9"), SQLDataType.INTEGER, this, "列_9");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_10</code>. 列10
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_10 = createField(DSL.name("column_10"), SQLDataType.INTEGER, this, "列10");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_11</code>. 列11
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_11 = createField(DSL.name("column_11"), SQLDataType.INTEGER, this, "列11");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_12</code>. 列12
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_12 = createField(DSL.name("column_12"), SQLDataType.INTEGER, this, "列12");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_13</code>. 列13
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_13 = createField(DSL.name("column_13"), SQLDataType.INTEGER, this, "列13");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_14</code>. 列14
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_14 = createField(DSL.name("column_14"), SQLDataType.INTEGER, this, "列14");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_15</code>. 列15
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_15 = createField(DSL.name("column_15"), SQLDataType.INTEGER, this, "列15");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_16</code>. 列16
     */
    public final TableField<S4ColumenGt22Record, String> COLUMN_16 = createField(DSL.name("column_16"), SQLDataType.CHAR(1), this, "列16");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_17</code>. 列17
     */
    public final TableField<S4ColumenGt22Record, String> COLUMN_17 = createField(DSL.name("column_17"), SQLDataType.CHAR(1), this, "列17");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_18</code>. 列18
     */
    public final TableField<S4ColumenGt22Record, String> COLUMN_18 = createField(DSL.name("column_18"), SQLDataType.CHAR(1), this, "列18");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_19</code>. 列19
     */
    public final TableField<S4ColumenGt22Record, LocalDateTime> COLUMN_19 = createField(DSL.name("column_19"), SQLDataType.LOCALDATETIME(0), this, "列19");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_20</code>. 列20
     */
    public final TableField<S4ColumenGt22Record, Boolean> COLUMN_20 = createField(DSL.name("column_20"), SQLDataType.BIT, this, "列20");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_21</code>. 列21
     */
    public final TableField<S4ColumenGt22Record, Byte> COLUMN_21 = createField(DSL.name("column_21"), SQLDataType.TINYINT, this, "列21");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_22</code>. 列22
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_22 = createField(DSL.name("column_22"), SQLDataType.INTEGER, this, "列22");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.column_23</code>. 列23
     */
    public final TableField<S4ColumenGt22Record, Integer> COLUMN_23 = createField(DSL.name("column_23"), SQLDataType.INTEGER, this, "列23");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.create_time</code>. 创建时间
     */
    public final TableField<S4ColumenGt22Record, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>learn-jooq.s4_columen_gt22.update_time</code>. 更新时间
     */
    public final TableField<S4ColumenGt22Record, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    private S4ColumenGt22(Name alias, Table<S4ColumenGt22Record> aliased) {
        this(alias, aliased, null);
    }

    private S4ColumenGt22(Name alias, Table<S4ColumenGt22Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("表字段超22"), TableOptions.table());
    }

    /**
     * Create an aliased <code>learn-jooq.s4_columen_gt22</code> table reference
     */
    public S4ColumenGt22(String alias) {
        this(DSL.name(alias), S4_COLUMEN_GT22);
    }

    /**
     * Create an aliased <code>learn-jooq.s4_columen_gt22</code> table reference
     */
    public S4ColumenGt22(Name alias) {
        this(alias, S4_COLUMEN_GT22);
    }

    /**
     * Create a <code>learn-jooq.s4_columen_gt22</code> table reference
     */
    public S4ColumenGt22() {
        this(DSL.name("s4_columen_gt22"), null);
    }

    public <O extends Record> S4ColumenGt22(Table<O> child, ForeignKey<O, S4ColumenGt22Record> key) {
        super(child, key, S4_COLUMEN_GT22);
    }

    @Override
    public Schema getSchema() {
        return LearnJooq.LEARN_JOOQ;
    }

    @Override
    public Identity<S4ColumenGt22Record, Integer> getIdentity() {
        return (Identity<S4ColumenGt22Record, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<S4ColumenGt22Record> getPrimaryKey() {
        return Keys.KEY_S4_COLUMEN_GT22_PRIMARY;
    }

    @Override
    public List<UniqueKey<S4ColumenGt22Record>> getKeys() {
        return Arrays.<UniqueKey<S4ColumenGt22Record>>asList(Keys.KEY_S4_COLUMEN_GT22_PRIMARY);
    }

    @Override
    public S4ColumenGt22 as(String alias) {
        return new S4ColumenGt22(DSL.name(alias), this);
    }

    @Override
    public S4ColumenGt22 as(Name alias) {
        return new S4ColumenGt22(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public S4ColumenGt22 rename(String name) {
        return new S4ColumenGt22(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public S4ColumenGt22 rename(Name name) {
        return new S4ColumenGt22(name, null);
    }
}
