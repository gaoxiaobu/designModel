/*
 * This file is generated by jOOQ.
 */
package learn_jooq.gaoxiaobu.generated.tables;


import java.time.LocalDateTime;

import learn_jooq.gaoxiaobu.generated.LearnJooq;
import learn_jooq.gaoxiaobu.generated.tables.records.S4NoPrimaryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S4NoPrimary extends TableImpl<S4NoPrimaryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>learn-jooq.s4_no_primary</code>
     */
    public static final S4NoPrimary S4_NO_PRIMARY = new S4NoPrimary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<S4NoPrimaryRecord> getRecordType() {
        return S4NoPrimaryRecord.class;
    }

    /**
     * The column <code>learn-jooq.s4_no_primary.column1</code>. 测试列1
     */
    public final TableField<S4NoPrimaryRecord, String> COLUMN1 = createField(DSL.name("column1"), SQLDataType.VARCHAR(10), this, "测试列1");

    /**
     * The column <code>learn-jooq.s4_no_primary.column2</code>. 测试列2
     */
    public final TableField<S4NoPrimaryRecord, String> COLUMN2 = createField(DSL.name("column2"), SQLDataType.VARCHAR(10), this, "测试列2");

    /**
     * The column <code>learn-jooq.s4_no_primary.create_time</code>. 创建时间
     */
    public final TableField<S4NoPrimaryRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>learn-jooq.s4_no_primary.update_time</code>. 更新时间
     */
    public final TableField<S4NoPrimaryRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    private S4NoPrimary(Name alias, Table<S4NoPrimaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private S4NoPrimary(Name alias, Table<S4NoPrimaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>learn-jooq.s4_no_primary</code> table reference
     */
    public S4NoPrimary(String alias) {
        this(DSL.name(alias), S4_NO_PRIMARY);
    }

    /**
     * Create an aliased <code>learn-jooq.s4_no_primary</code> table reference
     */
    public S4NoPrimary(Name alias) {
        this(alias, S4_NO_PRIMARY);
    }

    /**
     * Create a <code>learn-jooq.s4_no_primary</code> table reference
     */
    public S4NoPrimary() {
        this(DSL.name("s4_no_primary"), null);
    }

    public <O extends Record> S4NoPrimary(Table<O> child, ForeignKey<O, S4NoPrimaryRecord> key) {
        super(child, key, S4_NO_PRIMARY);
    }

    @Override
    public Schema getSchema() {
        return LearnJooq.LEARN_JOOQ;
    }

    @Override
    public S4NoPrimary as(String alias) {
        return new S4NoPrimary(DSL.name(alias), this);
    }

    @Override
    public S4NoPrimary as(Name alias) {
        return new S4NoPrimary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public S4NoPrimary rename(String name) {
        return new S4NoPrimary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public S4NoPrimary rename(Name name) {
        return new S4NoPrimary(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
