/*
 * This file is generated by jOOQ.
 */
package learn_jooq.gaoxiaobu.generated;


import learn_jooq.gaoxiaobu.generated.tables.S1User;
import learn_jooq.gaoxiaobu.generated.tables.S2UserMessage;
import learn_jooq.gaoxiaobu.generated.tables.S4ColumenGt22;
import learn_jooq.gaoxiaobu.generated.tables.S4UnionKey;
import learn_jooq.gaoxiaobu.generated.tables.S9News;
import learn_jooq.gaoxiaobu.generated.tables.records.S1UserRecord;
import learn_jooq.gaoxiaobu.generated.tables.records.S2UserMessageRecord;
import learn_jooq.gaoxiaobu.generated.tables.records.S4ColumenGt22Record;
import learn_jooq.gaoxiaobu.generated.tables.records.S4UnionKeyRecord;
import learn_jooq.gaoxiaobu.generated.tables.records.S9NewsRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * learn-jooq.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<S1UserRecord> KEY_S1_USER_PRIMARY = Internal.createUniqueKey(S1User.S1_USER, DSL.name("KEY_s1_user_PRIMARY"), new TableField[] { S1User.S1_USER.ID }, true);
    public static final UniqueKey<S2UserMessageRecord> KEY_S2_USER_MESSAGE_PRIMARY = Internal.createUniqueKey(S2UserMessage.S2_USER_MESSAGE, DSL.name("KEY_s2_user_message_PRIMARY"), new TableField[] { S2UserMessage.S2_USER_MESSAGE.ID }, true);
    public static final UniqueKey<S4ColumenGt22Record> KEY_S4_COLUMEN_GT22_PRIMARY = Internal.createUniqueKey(S4ColumenGt22.S4_COLUMEN_GT22, DSL.name("KEY_s4_columen_gt22_PRIMARY"), new TableField[] { S4ColumenGt22.S4_COLUMEN_GT22.ID }, true);
    public static final UniqueKey<S4UnionKeyRecord> KEY_S4_UNION_KEY_PRIMARY = Internal.createUniqueKey(S4UnionKey.S4_UNION_KEY, DSL.name("KEY_s4_union_key_PRIMARY"), new TableField[] { S4UnionKey.S4_UNION_KEY.UK_1, S4UnionKey.S4_UNION_KEY.UK_2 }, true);
    public static final UniqueKey<S9NewsRecord> KEY_S9_NEWS_PRIMARY = Internal.createUniqueKey(S9News.S9_NEWS, DSL.name("KEY_s9_news_PRIMARY"), new TableField[] { S9News.S9_NEWS.ID }, true);
}
